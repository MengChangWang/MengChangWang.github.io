<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Computer Science</title>
    <link>https://MengChangWang.github.io/</link>
    
    <atom:link href="https://mengchangwang.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>欢迎来到我的博客</description>
    <pubDate>Sat, 18 May 2024 06:55:39 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>C++基础</title>
      <link>https://mengchangwang.github.io/2024/04/27/C-%E5%9F%BA%E7%A1%80/</link>
      <guid>https://mengchangwang.github.io/2024/04/27/C-%E5%9F%BA%E7%A1%80/</guid>
      <pubDate>Sat, 27 Apr 2024 04:07:52 GMT</pubDate>
      
      <description>&lt;blockquote&gt;
&lt;p&gt;C++ 一些基础知识&lt;/p&gt;
&lt;/blockquote&gt;</description>
      
      
      
      <content:encoded><![CDATA[<blockquote><p>C++ 一些基础知识</p></blockquote><span id="more"></span><h1>C++ 基础</h1><h3 id="0-前置知识">0. 前置知识</h3><h4 id="0-1-左-右值">0.1 左/右值</h4><blockquote><ul class="lvl-1"><li class="lvl-2"><p><mark>左值</mark>:在内存中有明确存储位置(即地址)的表达式，通常出现在赋值表达式的左侧。 左值可以取地址</p></li><li class="lvl-2"><p><mark>右值</mark>：通常指临时的数据值(如字面量)，在内存中没有固定的地址，它<strong>不能被赋值</strong></p></li></ul></blockquote><h4 id="0-2-单位">0.2 单位</h4><blockquote><ul class="lvl-1"><li class="lvl-2"><p><mark>bit</mark>:<strong>比特</strong>，又称<strong>位</strong>，计算机内部储存数据的最小单位</p></li><li class="lvl-2"><p><mark>Byte</mark>:<strong>字节</strong>，由<strong>8个比特</strong>组成，习惯上以大写<strong>B</strong>来表示，通常1个字节可以存入一个ASCII码，2个字节可以存放一个汉字国标码。<strong>这是内存寻址的最小单元</strong></p></li><li class="lvl-2"><p><mark>word</mark>:<strong>字</strong>，由一个或多个字节组成，计算机的字长决定了其CPU一次操作实际处理的<strong>位数</strong>是多少，例如64位计算机的CPU一次最多能处理64位数据</p></li></ul></blockquote><h4 id="0-3-内存">0.3 内存</h4><blockquote><p>内存就是计算机的存储空间，用来存储程序的指令，数据和状态</p></blockquote><h5 id="0-3-1-内存四区">0.3.1 内存四区</h5><ul class="lvl-0"><li class="lvl-2"><p><mark>代码区(code/text)</mark>:存放CPU执行的机器指令。通常代码区是可共享的，即另外的程序可以调用它。编写的所有代码都会放进代码区，其特点是<strong>共享和只读</strong></p></li><li class="lvl-2"><p><mark>全局区/静态区(stactic)</mark>：用来存放全局变量，静态变量，常量</p><ul class="lvl-2"><li class="lvl-4">data区：存放已初始化的全局变量，静态变量和常量</li><li class="lvl-4">bss区：存放初始化为0或者NULL或未初始化的全局变量，静态变量和常量。未初始化的在程序执行前会自动被系统初始化为0或者NULL</li><li class="lvl-4">常量区：顾名思义，存放常量，如const修饰的<strong>全局变量</strong>，字符串常量</li></ul></li><li class="lvl-2"><p><mark>栈(stack)</mark>:是一种先进后出的内存结构，由编译器自动分配</p><ul class="lvl-2"><li class="lvl-4"><p>结构体和类的对象在默认情况下是分配在栈区</p></li><li class="lvl-4"><p>存放<strong>函数的参数值，返回值，局部变量</strong>等，由const定义的局部变量也存储在栈里。</p></li><li class="lvl-4"><p>内存地址<strong>由高到低</strong>方向生长，其最大大小由编译时确定，速度快但自由性差，最大空间比堆小</p></li></ul></li><li class="lvl-2"><p><mark>堆(heap)</mark>:用于动态内存分配</p><ul class="lvl-2"><li class="lvl-4">内存地址<strong>由低到高</strong>方向生长，其大小由系统内存/虚拟内存上限决定，速度较慢，但自由性大，可用空间大</li><li class="lvl-4">注意进行内存释放，否则会造成内存泄露</li></ul></li></ul><img data-src="https://cdn.jsdelivr.net/gh/MengChangWang/Blog_Image@main/img/8b2d920e3dd09f80d85824f19bd5f2e.jpg" alt="8b2d920e3dd09f80d85824f19bd5f2e" style="zoom: %;" /><h5 id="0-3-2-内存编址">0.3.2 内存编址</h5><p>即给计算机的存储单元进行编号，而在CS中存储单元通常是指最小的可寻址单元即byte，也就是给每个byte一个编号，这个编号就是内存的<strong>地址</strong></p><img data-src="https://cdn.jsdelivr.net/gh/MengChangWang/Blog_Image@main/img/image-20240408194601136.png" alt="image-20240408194601136" style="zoom: 40%;" /><h5 id="0-3-3-内存地址空间">0.3.3 内存地址空间</h5><blockquote><p>将所有byte的编号连起来就叫作内存的地址空间，而地址空间(可寻址内存)的大小与电脑是32位还是34位有关</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>32 位意味着可寻址的内存范围是 <code>2^32 byte = 4GB</code></p></li><li class="lvl-2"><p>64位即 <code>2^64 byte</code></p></li></ul><h4 id="0-4-原码-反码-补码">0.4 原码 反码 补码</h4><ul class="lvl-0"><li class="lvl-2"><p>反码  原码按位取反  正数的反码是其本身</p></li><li class="lvl-2"><p>补码  原码按位取反加一    正数的补码是其本身</p></li><li class="lvl-2"><p><mark>计算机中使用补码来表示和操作整数</mark></p></li><li class="lvl-2"><p>个人觉得反码和补码的引入 是为了便于理解在计算机中如何使用 <strong>正数来表示负数</strong></p></li></ul><blockquote><p>如 int 在内存中占据4个字节 表示有符号的整数 他的范围是 [-2^31 , 2^31 - 1]</p><p>unsigned int 在内存中占据四个字节 表示无符号整数 他的范围是[0,2^32-1]</p><p>而32位二进制数表示的范围是[0,2^32-1]，即把它从中间分一半，<strong>将 0 开头的32位二进制数用来表示正数，将 1 开头的用来表示负数</strong>，所以int表示的正数的范围是unsigned int 的一半 但二者表示的总数是一样的</p></blockquote><h4 id="0-5-进制转换">0.5 进制转换</h4><blockquote><p><strong>十进制： 都是以0-9这九个数字组成，不能以0开头。</strong></p><p><strong>二进制： 由0和1两个数字组成。</strong></p><p><strong>八进制： 由0-7数字组成，为了区分与其他进制的数字区别，开头都是以0开始。</strong></p><p><strong>十六进制：由0-9和A-F组成。为了区分于其他数字的区别，开头都是以0x开始。</strong></p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>整数部分</p><p>十进制转n进制：十进制数除以2，反向取余数，直到商为0终止</p><img data-src="https://cdn.jsdelivr.net/gh/MengChangWang/Blog_Image@main/img/image-20240408204846887.png" alt="image-20240408204846887" style="zoom: 25%;" /><p>n进制转十进制：将每一位乘以相应的权值，然后将乘积相加</p></li><li class="lvl-2"><p>小数部分</p></li></ul><p>​十进制转n进制: 乘n取整，顺序输出</p><p>​n进制转十进制：如上</p><h3 id="1-变量">1.变量</h3><blockquote><p>变量名是变量地址的符号化体现</p></blockquote><h4 id="1-1-变量类型">1.1 变量类型</h4><h5 id="1-1-1-作用：">1.1.1 作用：</h5><ul class="lvl-0"><li class="lvl-2"><p>内存分配：告诉编译器该变量占据的内存大小，占了多少个字节</p></li><li class="lvl-2"><p>操作限制：规定了该变量可以执行的操作</p></li><li class="lvl-2"><p><mark>数据解释</mark>：决定了如何解释存储在内存中的<mark>位模式</mark>，决定了编译器如何解读对应的二进制数据</p></li></ul><blockquote><p><strong>位模式</strong>是指一系列的0和1，是计算机内存中数据最基本的形式，所有数据最终都会被表示为 位模式</p></blockquote><h5 id="1-1-2-种类">1.1.2 种类</h5><ul class="lvl-0"><li class="lvl-2"><p>基础类型 ：整数 字符 布尔 浮点</p></li><li class="lvl-2"><p>修饰符：long short signed unsigned</p></li><li class="lvl-2"><p>类类型：class</p></li><li class="lvl-2"><p>结构体类型：struct</p></li><li class="lvl-2"><p>数组类型</p></li><li class="lvl-2"><p>指针类型</p></li><li class="lvl-2"><p>引用类型</p></li><li class="lvl-2"><p>复数类型(complex  C++11及以上)</p></li><li class="lvl-2"><p>联合体 unio</p></li><li class="lvl-2"><p>枚举体 enum</p></li></ul><h3 id="2-内存对齐">2. 内存对齐</h3><blockquote><p>为了提高数据访问的性能和效率，将数据存储在适当的内存地址上，以减少额外开销   <strong>以空间换时间</strong></p><p>对齐的长度一般为2的n次幂(1，2 ，4，8)</p></blockquote><h5 id="2-1-产生原因">2.1 产生原因</h5><p>为了适应CPU读取数据的行为，CPU一次读取4个字节或8个字节，由编译器和操作系统(32位或64位)决定</p><h5 id="2-2-更改对齐规则">2.2 更改对齐规则</h5><ul class="lvl-0"><li class="lvl-2"><p>使用编译器指令<code>（如 #pragma pack）</code>更改默认的对齐规则。这个命令是全局生效的。这可以用于减小数据结构的大小，但可能会降低访问性能。</p></li><li class="lvl-2"><p>在 C++11 及更高版本中，可以使用 alignas 关键字为数据结构或变量指定对齐要求。这个命令是对某个类型或者对象生效的。例如，<code>alignas(16) int x</code>; 将确保 x 的地址是 16 的倍数。</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> pack(push, 16) <span class="comment">//将当前对齐值推送到堆栈上，并将对齐值设置为16字节</span></span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">MyStruct</span> &#123;</span><br><span class="line">    <span class="type">char</span> a;</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> pack(pop)  <span class="comment">//从堆栈中弹出对齐值，恢复之前的对齐值</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-3-结构体对齐">2.3 结构体对齐</h5><ul class="lvl-0"><li class="lvl-2"><p>最大成员对齐：编译器会将数据成员补齐为最大成员大小的整数倍</p><p>如果结构体中含有数组成员，如 char a[5]，它的对齐方式<strong>和连续写 5 个 char 类型变量是一样的，也就是说它还是按一个字节对齐</strong></p></li><li class="lvl-2"><p>填充字节(struct padding)：如果某成员大小满足对齐要求，编译器会插入一些字节进行填充</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">stu1</span> &#123;</span><br><span class="line">    <span class="type">char</span> a[<span class="number">18</span>];  <span class="comment">//就本身而言占据18个字节   实际占据24个字节</span></span><br><span class="line">    <span class="type">double</span> b;    <span class="comment">//占据8个字节</span></span><br><span class="line">    <span class="type">char</span> c;      <span class="comment">//实际占据4个字节</span></span><br><span class="line">    <span class="type">int</span> d;       <span class="comment">//实际占据4个字节</span></span><br><span class="line">    <span class="type">short</span> e;     <span class="comment">//实际占据8个字节</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    stu1 s1;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">sizeof</span>(s1)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">---------------</span><br><span class="line">输出结果：</span><br><span class="line"><span class="built_in">sizeof</span>(s1)=<span class="number">48</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.jsdelivr.net/gh/MengChangWang/Blog_Image@main/img/image-20240416205302797.png" alt="image-20240416205302797"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">stu2</span> &#123;</span><br><span class="line">    <span class="type">char</span> x;</span><br><span class="line">    <span class="type">int</span> y;</span><br><span class="line">    <span class="type">double</span> z;</span><br><span class="line">    <span class="type">char</span> v[<span class="number">6</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">stu1</span> &#123;</span><br><span class="line">    <span class="type">char</span> a;         <span class="comment">//实际占据8个字节</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">stu2</span> b; <span class="comment">// 该结构体中最大的成员占据8个字节，实际占据24个字节</span></span><br><span class="line">    <span class="type">int</span> c;         <span class="comment">//实际占据8个字节</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    stu1 s1;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">sizeof</span>(s1)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---------------</span><br><span class="line">输出结果：</span><br><span class="line"><span class="built_in">sizeof</span>(s1)=<span class="number">40</span></span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.jsdelivr.net/gh/MengChangWang/Blog_Image@main/img/image-20240416210502232.png" alt="image-20240416210502232"></p><h5 id="2-4-类的内存对齐">2.4 类的内存对齐</h5><h6 id="2-4-1-空类的大小">2.4.1 空类的大小</h6><blockquote><p>空类和空结构体的<strong>实例化对象的</strong>大小都为1</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">demo</span>&#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line">    demo a;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">sizeof</span>(a)&lt;&lt;endl;  <span class="comment">// 输出结果为1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="2-4-2-添加成员函数，静态数据成员，静态成员函数">2.4.2 添加成员函数，静态数据成员，静态成员函数</h6><blockquote><p>结果依旧为1</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">demo</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">demo</span>() &#123;&#125;</span><br><span class="line">    ~<span class="built_in">demo</span>() &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">myPrint</span><span class="params">()</span> </span>&#123; cout &lt;&lt; <span class="string">&quot;hello world!&quot;</span> &lt;&lt; endl; &#125;</span><br><span class="line">    <span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">sharedFunc</span><span class="params">()</span> </span>&#123; cout &lt;&lt; <span class="string">&quot;hello this is a shared xxx&quot;</span> &lt;&lt; endl; &#125;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> a;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> demo::a = <span class="number">1024</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line">    demo x;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">sizeof</span>(x) &lt;&lt; endl;  <span class="comment">// 输出结果为1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为成员函数，静态成员函数存储在<strong>代码段</strong>（.text）中，静态成员变量存储在<strong>全局/静态区</strong>(static)，他们不占用类的内存，不是每个对象分别存储</p><h6 id="2-4-3-类对象大小的影响因素">2.4.3 类对象大小的影响因素</h6><blockquote><p><mark>非静态成员变量</mark>和<mark>虚函数</mark></p><p>考虑是否存在vptr，若存在则计入考虑范围，整体上与结构体相同</p></blockquote><h3 id="3-类的多态">3.类的多态</h3><blockquote><p>允许使用一个接口来表示不同的类，而这些类的对象在运行时可以表现出不同的行为</p><p>父类指针可以指向子类对象，进而调用子类函数</p></blockquote><h5 id="3-1-虚表-vtable"><strong>3.1 虚表(vtable)</strong></h5><ul class="lvl-0"><li class="lvl-2"><p>每个存在虚函数的类，都有一个虚函数表</p></li><li class="lvl-2"><p>虚函数表是一个指针数组，其元素是指向虚函数的<strong>函数指针</strong>(函数的地址)</p></li><li class="lvl-2"><p>成员函数(包括虚函数)是类的一部分，<strong>不占用对象实例的内存空间</strong>，他们为同一个类的所有对象共享，存储在程序的<strong>代码段</strong>中</p></li></ul><h5 id="3-2虚表指针-vptr"><strong>3.2虚表指针(vptr)</strong></h5><blockquote><p>实现多态类的核心机制之一</p><p>每一个包含虚函数的类 的实例化对象所包含的<strong>隐含指针</strong></p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>该指针指向类的虚表</p></li><li class="lvl-2"><p>大多数实现上，虚函数表指针<strong>一般</strong>都放在对象第一个位置</p></li><li class="lvl-2"><p>该指针是隐含的，<strong>不是</strong>类的成员变量，用户不能直接访问或修改它</p></li><li class="lvl-2"><p>指针大小取决于操作系统或编译器，32位占4个字节，64位占8个字节</p></li></ul><h5 id="3-3-多态的实现"><strong>3.3 多态的实现</strong></h5><ul class="lvl-0"><li class="lvl-2"><p>当派生类重写了基类的虚函数时，派生类的虚表中对应的函数指针将被更新，指向派生类中的新实现，即指向派生类中重写函数的地址</p></li></ul><img data-src="https://cdn.jsdelivr.net/gh/MengChangWang/Blog_Image@main/img/image-20240427112831155.png" alt="image-20240427112831155" style="zoom: 45%;" />]]></content:encoded>
      
      
      <category domain="https://MengChangWang.github.io/categories/C/">C++</category>
      
      
      <category domain="https://MengChangWang.github.io/tags/C/">C++</category>
      
      
      <comments>https://mengchangwang.github.io/2024/04/27/C-%E5%9F%BA%E7%A1%80/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>《C++ primer》文本查询程序一</title>
      <link>https://mengchangwang.github.io/2024/04/13/%E3%80%8AC-primer%E3%80%8B%E6%96%87%E6%9C%AC%E6%9F%A5%E8%AF%A2%E7%A8%8B%E5%BA%8F%E4%B8%80/</link>
      <guid>https://mengchangwang.github.io/2024/04/13/%E3%80%8AC-primer%E3%80%8B%E6%96%87%E6%9C%AC%E6%9F%A5%E8%AF%A2%E7%A8%8B%E5%BA%8F%E4%B8%80/</guid>
      <pubDate>Sat, 13 Apr 2024 08:33:37 GMT</pubDate>
      
      <description>&lt;blockquote&gt;
&lt;p&gt;这是《C++ primer》中的一个示例程序，看了几遍仍觉有些细节没有明白，故手敲了一遍&lt;/p&gt;
&lt;p&gt;需了解STL容器部分知识点，智能指针，文件流，string流&lt;/p&gt;
&lt;/blockquote&gt;</description>
      
      
      
      <content:encoded><![CDATA[<blockquote><p>这是《C++ primer》中的一个示例程序，看了几遍仍觉有些细节没有明白，故手敲了一遍</p><p>需了解STL容器部分知识点，智能指针，文件流，string流</p></blockquote><span id="more"></span><h1>《C++ primer》文本查询程序一</h1><p>书上给的例子尚有瑕疵，如果单词在同一行出现多次，则只会记录为一次，本人能力有限，尚未解决此问题</p><h3 id="以下是写完程序后绘制的思维导图">以下是写完程序后绘制的思维导图</h3><p><img data-src="https://cdn.jsdelivr.net/gh/MengChangWang/Blog_Image@main/img/image-20240413155500846.png" alt="image-20240413155500846"></p><h3 id="代码部分">代码部分</h3><ul class="lvl-0"><li class="lvl-2"><p>main.cpp</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;TextQuery.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;ResultQuery.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">runQueries</span><span class="params">(ifstream&amp; fin)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string filename;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入你要查询的文件名(包含后缀)&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cin &gt;&gt; filename;</span><br><span class="line"><span class="function">ifstream <span class="title">readFile</span><span class="params">(filename, ios::in)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (readFile.<span class="built_in">is_open</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">runQueries</span>(readFile);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;the file open failed!!!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">runQueries</span><span class="params">(ifstream&amp; fin)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">TextQuery <span class="title">tq</span><span class="params">(fin)</span></span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;please enter word to look for, or q to quit.&quot;</span> &lt;&lt; endl;</span><br><span class="line">string needle;</span><br><span class="line"><span class="keyword">if</span> (cin &gt;&gt; needle &amp;&amp; needle != <span class="string">&quot;q&quot;</span> &amp;&amp; needle != <span class="string">&quot;Q&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MyPrint</span>(cout, tq.<span class="built_in">query</span>(needle)) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>TextQuery.h</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;memory&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;ResultQuery.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TextQuery</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">shared_ptr&lt;vector&lt;string&gt;&gt; file;   <span class="comment">//智能指针 多个对象共享数据 存储地址</span></span><br><span class="line">map&lt;string, shared_ptr&lt;set&lt;<span class="type">int</span>&gt;&gt;&gt; wm; <span class="comment">//间接实现单词与行号之间的映射</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">TextQuery</span>(ifstream&amp; fin);   <span class="comment">//构造函数</span></span><br><span class="line"><span class="function">ResultQuery <span class="title">query</span><span class="params">(string needle)</span></span>; <span class="comment">//用来整理出目标单词的相关信息，然后传递给ResultQuery</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>TextQuery.cpp</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;TextQuery.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">TextQuery::<span class="built_in">TextQuery</span>(ifstream&amp; fin):<span class="built_in">file</span>(<span class="keyword">new</span> vector&lt;string&gt;)</span><br><span class="line">&#123;</span><br><span class="line">string lineContent;</span><br><span class="line"><span class="type">size_t</span> lineNo;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">getline</span>(fin,lineContent))    <span class="comment">// 将文件内容拆分为一行一行</span></span><br><span class="line">&#123;</span><br><span class="line">file-&gt;<span class="built_in">push_back</span>(lineContent);</span><br><span class="line">lineNo = file-&gt;<span class="built_in">size</span>() - <span class="number">1</span>;    <span class="comment">//从零开始计数，方便之后利用迭代器进行输出查询结果</span></span><br><span class="line"><span class="function">istringstream <span class="title">line</span><span class="params">(lineContent)</span></span>; <span class="comment">//利用string流 将一行内容再拆分为每个单词</span></span><br><span class="line">string word;</span><br><span class="line"><span class="keyword">while</span> (line &gt;&gt; word)     <span class="comment">//实现每个单词与对应行号之间的映射</span></span><br><span class="line">&#123;</span><br><span class="line">shared_ptr&lt;set&lt;<span class="type">int</span>&gt;&gt;&amp; NO = wm[word];  <span class="comment">// 在map中如果使用下标未找到对应的值，则会自动生成一个默认值</span></span><br><span class="line"><span class="keyword">if</span> (!NO)</span><br><span class="line">&#123;</span><br><span class="line">NO.<span class="built_in">reset</span>(<span class="keyword">new</span> set&lt;<span class="type">int</span>&gt;);    <span class="comment">//清空默认值，使其是一个指向set&lt;int&gt;型的指针</span></span><br><span class="line">NO-&gt;<span class="built_in">insert</span>(lineNo);        <span class="comment">//将这个单词所在的行号拷贝给 指针指向的那个空间</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">NO-&gt;<span class="built_in">insert</span>(lineNo);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ResultQuery <span class="title">TextQuery::query</span><span class="params">(string needle)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">shared_ptr&lt;set&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">nothing</span> (<span class="keyword">new</span> set&lt;<span class="type">int</span>&gt;);</span><br><span class="line"><span class="keyword">auto</span> result = wm.<span class="built_in">find</span>(needle);</span><br><span class="line"><span class="keyword">if</span> (result == wm.<span class="built_in">end</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">ResultQuery</span>(needle,file, nothing);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">ResultQuery</span>(needle,file, result-&gt;second);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>ResultQuery.h</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;memory&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ResultQuery</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string needle;</span><br><span class="line">shared_ptr&lt;vector&lt;string&gt;&gt; file;</span><br><span class="line">shared_ptr&lt;set&lt;<span class="type">int</span>&gt;&gt; lines;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">ResultQuery</span>(string n, shared_ptr&lt;vector&lt;string&gt;&gt; f, shared_ptr&lt;set&lt;<span class="type">int</span>&gt;&gt; l) :\</span><br><span class="line"><span class="built_in">needle</span>(n), <span class="built_in">file</span>(f), <span class="built_in">lines</span>(l) &#123;&#125;    <span class="comment">//构造函数 进行初始化</span></span><br><span class="line"><span class="function"><span class="keyword">friend</span> ostream&amp; <span class="title">MyPrint</span><span class="params">(ostream&amp;, <span class="type">const</span> ResultQuery&amp;)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>ResultQuery.cpp</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ResultQuery.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function">ostream&amp; <span class="title">MyPrint</span><span class="params">(ostream&amp; os, <span class="type">const</span> ResultQuery&amp; rq)</span> </span>&#123;</span><br><span class="line">os&lt;&lt; rq.needle &lt;&lt; <span class="string">&quot; occurs &quot;</span> &lt;&lt; rq.lines-&gt;<span class="built_in">size</span>() &lt;&lt; <span class="string">&quot;times in the file &quot;</span>  &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> line : *(rq.lines))</span><br><span class="line">&#123;</span><br><span class="line">os &lt;&lt; <span class="string">&quot;\tline:&quot;</span>&lt;&lt;line+<span class="number">1</span>&lt;&lt; <span class="string">&quot; &quot;</span>&lt;&lt;rq.file-&gt;<span class="built_in">begin</span>()[line]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> os;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://MengChangWang.github.io/categories/C/">C++</category>
      
      
      <category domain="https://MengChangWang.github.io/tags/C/">C++</category>
      
      
      <comments>https://mengchangwang.github.io/2024/04/13/%E3%80%8AC-primer%E3%80%8B%E6%96%87%E6%9C%AC%E6%9F%A5%E8%AF%A2%E7%A8%8B%E5%BA%8F%E4%B8%80/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JavaWeb前端基础</title>
      <link>https://mengchangwang.github.io/2024/04/05/JavaWeb%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/</link>
      <guid>https://mengchangwang.github.io/2024/04/05/JavaWeb%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/</guid>
      <pubDate>Fri, 05 Apr 2024 07:40:28 GMT</pubDate>
      
      <description>&lt;blockquote&gt;
&lt;p&gt;Java Web 前端的一些基础知识和相关工具的使用&lt;/p&gt;
&lt;/blockquote&gt;</description>
      
      
      
      <content:encoded><![CDATA[<blockquote><p>Java Web 前端的一些基础知识和相关工具的使用</p></blockquote><span id="more"></span><h1><u><strong>Java Web</strong></u></h1><p>文档查询网站:<a href="https://www.w3school.com.cn/index.html">https://www.w3school.com.cn/index.html</a></p><h1>Web前端</h1><h3 id="网页">网页</h3><ul class="lvl-0"><li class="lvl-2"><p>本质是<strong>前端代码</strong>经过浏览器的<strong>解析和渲染</strong>而成的</p></li><li class="lvl-2"><p><strong>浏览器内核</strong>进行代码的解析和渲染</p></li></ul><h3 id="web标准">web标准</h3><ul class="lvl-0"><li class="lvl-2"><p>HTML：负责网页的结构（页面元素和内容）</p></li><li class="lvl-2"><p>CSS：负责网页的表现（页面元素的外观，位置，颜色，大小等）</p></li><li class="lvl-2"><p>JavaScript：负责网页的行为（交互效果）</p></li><li class="lvl-2"><p>高级技术</p><ul class="lvl-2"><li class="lvl-6">Vue.js</li><li class="lvl-6">ElementUI</li><li class="lvl-6">Ajax</li><li class="lvl-6">Axios</li><li class="lvl-6">…</li></ul></li></ul><h3 id="HTML（HyperText-Markup-Language）">HTML（HyperText Markup Language）</h3><ul class="lvl-0"><li class="lvl-2"><p>超文本标记语言（超越普通文本语言，由标签构成的语言）</p></li><li class="lvl-2"><p>标签是预定好的，</p></li><li class="lvl-2"><p>HTML代码直接在浏览器中运行，HTML标签由浏览器解析</p></li></ul><h4 id="特点">特点</h4><ul class="lvl-0"><li class="lvl-2"><p>不区分大小写</p></li><li class="lvl-2"><p>属性可以使用单引号或者双引号</p></li><li class="lvl-2"><p>语法松散</p></li></ul><h4 id="常用标签">常用标签</h4><ul class="lvl-0"><li class="lvl-2"><p>&lt;img&gt;</p><ul class="lvl-2"><li class="lvl-6"><strong>src</strong>:指定图像的url（相对或绝对）</li><li class="lvl-6"><strong>width</strong></li><li class="lvl-6"><strong>height</strong></li></ul></li><li class="lvl-2"><p>标题标签:&lt;h1&gt; - &lt;h6&gt;</p></li><li class="lvl-2"><p>水平线标签:&lt;hr&gt;</p></li><li class="lvl-2"><p>超链接&lt;a&gt;</p><ul class="lvl-2"><li class="lvl-6">href指定访问资源的url</li><li class="lvl-6">target指定在何处打开资源(_self,_blank)</li></ul></li><li class="lvl-2"><p>&lt;video&gt;视频</p><ul class="lvl-2"><li class="lvl-6">controls显示播放控件</li><li class="lvl-6">src</li><li class="lvl-6">width</li></ul></li><li class="lvl-2"><p>&lt;audio&gt;音频</p><ul class="lvl-2"><li class="lvl-6">controls</li><li class="lvl-6">src</li><li class="lvl-6">width</li></ul></li><li class="lvl-2"><p>&lt;b&gt;/&lt;strong&gt;加粗</p></li><li class="lvl-2"><p>&lt;p&gt;分段落</p></li><li class="lvl-2"><p><mark>表格标签</mark></p><ul class="lvl-2"><li class="lvl-6"><p>&lt;table&gt;定义表格整体</p><ul class="lvl-4"><li class="lvl-10">border:规定边框宽度</li><li class="lvl-10">width:规定表格的宽度</li><li class="lvl-10">cellspacing:规定单元格之间的空隙大小</li></ul></li><li class="lvl-6"><p>&lt;tr&gt;:表格的行</p></li><li class="lvl-6"><p>&lt;td&gt;:表格单元格，（表头使用&lt;th&gt;）</p></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1px&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;600px&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>角色名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">th</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>元素<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>国度<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>那维莱特<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://picx.zhimg.com/70/v2-5623d0ee6d0a7f7a63ffce7830fdbc7a_1440w.avis?source=172ae18b&amp;biz_tag=Post&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>水<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>枫丹<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>提纳里<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://patchwiki.biligame.com/images/ys/2/2b/hcwuh3cbgc5dyfcx4qlqp95qlzbp619.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>草<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>须弥<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><mark>表单标签</mark></p><ul class="lvl-2"><li class="lvl-6">负责采集数据，如登录，注册等信息</li><li class="lvl-6">&lt;form&gt;<ul class="lvl-4"><li class="lvl-10"><p>&lt;input&gt;:定义表单项，通过type属性控制输入形式</p><ul class="lvl-6"><li class="lvl-14"><img data-src="https://cdn.jsdelivr.net/gh/MengChangWang/Blog_Image@main/img/4ea973bcae494ddcb335a2210f851a33.jpg" alt=""></li></ul></li><li class="lvl-10"><p>&lt;select&gt;:定义下拉列表</p><ul class="lvl-6"><li class="lvl-14">&lt;option&gt;定义列表项</li></ul></li><li class="lvl-10"><p>&lt;textarea&gt;:定义文本域</p></li></ul></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    性别:<span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    爱好:<span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;java&quot;</span>&gt;</span>java<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;genshin&quot;</span>&gt;</span>genshin<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sleep&quot;</span>&gt;</span>sleep<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    图像:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;image&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    生日:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;date&quot;</span> <span class="attr">name</span>=<span class="string">&quot;birthday&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    时间:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;time&quot;</span> <span class="attr">name</span>=<span class="string">&quot;time&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    日期时间:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;datetime-local&quot;</span> <span class="attr">name</span>=<span class="string">&quot;datetime&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    邮箱:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    年龄:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    学历:<span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;degree&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>-----------请选择---------<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>大专<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>本科<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>硕士<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>博士<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    描述:<span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 表单常见按钮 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;重置&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>属性</p><ul class="lvl-2"><li class="lvl-6">action:规定提交表单时向<mark>何处</mark>发送表单数据，<mark>URL(如果不指定默认提交到当前页面)</mark></li><li class="lvl-6">method:规定用于发送表单数据的方式。GET，POST<ul class="lvl-4"><li class="lvl-10">get在url后面拼接表单数据</li><li class="lvl-10">post在消息体（请求体）中传递，参数长度无限制</li></ul></li></ul></li><li class="lvl-2"><p><img data-src="https://cdn.jsdelivr.net/gh/MengChangWang/Blog_Image@main/img/e447b517ec4b4c0188f40c169819dee5.jpg" alt=""><img data-src="https://cdn.jsdelivr.net/gh/MengChangWang/Blog_Image@main/img/6849f34158104e18a40762f0f110e73c.jpg" alt=""></p></li></ul><h3 id="CSS（Cascading-Style-Sheet）">CSS（Cascading Style Sheet）</h3><ul class="lvl-0"><li class="lvl-2"><p>层叠样式表，控制网页的表现</p></li></ul><h4 id="CSS选择器">CSS选择器</h4><ul class="lvl-0"><li class="lvl-2"><p>元素选择器<code>h1&#123;&#125;</code></p></li><li class="lvl-2"><p>id选择器<code>#hid&#123;&#125;</code>(在style中)     <code>&lt;h1 id=&quot;hid&quot;&gt;</code>不能重复</p></li><li class="lvl-2"><p>类选择器<code>.cls&#123;&#125;</code>(在style中)      <code>&lt;h1 class=&quot;cls&quot;&gt;</code></p></li></ul><h4 id="常用标签-2">常用标签</h4><ul class="lvl-0"><li class="lvl-2"><p>&lt;span&gt;无语义的布局标签，一行可显示多个</p></li><li class="lvl-2"><p>&lt;div&gt;</p></li></ul><h4 id="属性">属性</h4><ul class="lvl-0"><li class="lvl-2"><p>color</p></li><li class="lvl-2"><p>font-size：字体大小（加px）</p></li><li class="lvl-2"><p>text-decoration:规定文本的修饰，none表示定义标准的文本</p></li><li class="lvl-2"><p>text-align：控制对齐方式</p></li><li class="lvl-2"><p>text-indent:首行缩进</p></li><li class="lvl-2"><p>line-height：行高</p></li><li class="lvl-2"><p>空格占位符：&amp;nbsp</p></li></ul><h4 id="盒子模型">盒子模型</h4><ul class="lvl-0"><li class="lvl-2"><p>&lt;div&gt;无语义的布局标签，一行只占一个</p></li><li class="lvl-2"><p>组成：内容区域(content)，内边距区域(padding)，边框区域(border)，外边距区域(margin)</p></li></ul><p><img data-src="https://cdn.jsdelivr.net/gh/MengChangWang/Blog_Image@main/img/f16d206f52b2485fa07da58b55eb814d.jpg" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">h1</span>&#123;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">color</span>:<span class="built_in">rgb</span>(<span class="number">102</span>, <span class="number">97</span>, <span class="number">97</span>);</span></span><br><span class="line"><span class="language-css">     &#125;</span></span><br><span class="line"><span class="language-css">   //类选择器</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.time</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>:<span class="built_in">rgb</span>(<span class="number">241</span>, <span class="number">3</span>, <span class="number">3</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    //标签选择器</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>:black;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    //id选择器</span></span><br><span class="line"><span class="language-css">   <span class="selector-id">#wangmc</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: right;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">28px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>:chocolate;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    </span></span><br><span class="line"><span class="language-css">    <span class="comment">/*&lt;div id=&quot;center&quot;&gt;*/</span></span></span><br><span class="line"><span class="language-css">   <span class="selector-id">#center</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>:<span class="number">80%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">box-sizing</span>: border-box;<span class="comment">/*指定width为盒子宽度*/</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">219</span>, <span class="number">235</span>, <span class="number">235</span>);</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">20px</span>; <span class="comment">/*内边距 上右下左*/</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid red;<span class="comment">/*边框宽度 线条类型 颜色*/</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>:auto;<span class="comment">/*外边距 */</span></span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JavaScript（简称：js）">JavaScript（简称：js）</h3><ul class="lvl-0"><li class="lvl-2"><p>跨平台，面向对象的脚本语言，使网页可以交互</p></li></ul><h4 id="js引入方式">js引入方式</h4><ul class="lvl-0"><li class="lvl-2"><p>内部脚本（定义在HTML页面）</p><ul class="lvl-2"><li class="lvl-6">js代码<strong>必须</strong>位于&lt;script&gt;&lt;/script&gt;之间</li><li class="lvl-6">可以放在任意地方，放置任意数量</li><li class="lvl-6">一般位于&lt;body&gt;元素的底部，改善显示速度</li></ul></li><li class="lvl-2"><p>外部脚本（js代码定义在外部角色文件中，然后引入到HTML中）</p><ul class="lvl-2"><li class="lvl-6">外部js文件中只包含js代码，不含有&lt;script&gt;标签</li><li class="lvl-6">&lt;script&gt;标签<strong>不能自闭合</strong></li></ul></li></ul><h4 id="基础语法">基础语法</h4><ul class="lvl-0"><li class="lvl-2"><p>书写语法</p><ul class="lvl-2"><li class="lvl-6">区分大小写</li><li class="lvl-6">每条语句结束可以不写分号</li></ul></li><li class="lvl-2"><p>输出语句</p><ul class="lvl-2"><li class="lvl-6">window.alert()  写入警告框</li><li class="lvl-6">document.write()  写入HTML输出</li><li class="lvl-6">console.log()  写入浏览器控制台</li></ul></li></ul><h4 id="变量">变量</h4><ul class="lvl-0"><li class="lvl-2"><p>利用<strong>var，let，const关键字</strong>来声明变量</p></li><li class="lvl-2"><p>因为js是弱类型的语言，所以变量<strong>可以存放不同类型</strong>的值</p></li><li class="lvl-2"><p>利用var定义出来的是全局变量，可以重复定义</p></li><li class="lvl-2"><p>利用let定义出来的是<strong>局部变量</strong>，只在代码块中有效，不可重复定义</p></li></ul><h4 id="数据类型">数据类型</h4><ul class="lvl-0"><li class="lvl-2"><p>原始类型</p><ul class="lvl-2"><li class="lvl-6">number，string，boolean，null，undefined</li></ul></li><li class="lvl-2"><p>引用类型</p><ul class="lvl-2"><li class="lvl-6">js中的对象</li></ul></li><li class="lvl-2"><p>利用<strong>typeof</strong>来获取数据类型</p></li></ul><h4 id="运算符">运算符</h4><ul class="lvl-0"><li class="lvl-2"><p>==：会进行类型转换</p></li><li class="lvl-2"><p>===：<strong>不会</strong>进行类型转换</p></li></ul><h4 id="js函数">js函数</h4><ul class="lvl-0"><li class="lvl-2"><p>通过function关键字进行定义</p></li><li class="lvl-2"><p>不需要定义形参和返回值的类型</p></li></ul><h4 id="js对象">js对象</h4><ul class="lvl-0"><li class="lvl-2"><p><mark>Array</mark></p><ul class="lvl-2"><li class="lvl-6">var 变量名 =  [元素列表]</li><li class="lvl-6">var 变量名 = new Array（元素列表）</li><li class="lvl-6">属性：length，返回数组中的元素数量</li><li class="lvl-6">方法<ul class="lvl-4"><li class="lvl-10">forEach()：遍历数组中每一个有值的元素，并调用一次传入的函数<ul class="lvl-6"><li class="lvl-14">箭头函数:<mark>arry.forEach(item=&gt;{console.log(item);})</mark></li></ul></li><li class="lvl-10">push()：将新元素添加到数组末尾，并返回新的长度</li><li class="lvl-10">splice(start,number)：从数组中删除元素</li></ul></li></ul></li><li class="lvl-2"><p><mark>String</mark></p><ul class="lvl-2"><li class="lvl-6">属性：length</li><li class="lvl-6">方法<ul class="lvl-4"><li class="lvl-10">charAt()：返回指定位置的字符</li><li class="lvl-10">indexOf()：检索字符串所在的位置</li><li class="lvl-10">trim()：去除字符串两边的空格</li><li class="lvl-10">substring(start,end):提取字符串中两个指定的索引号之间的字符(左闭右开)</li></ul></li></ul></li><li class="lvl-2"><p><mark>JSON(JavaScript Object Notation)</mark></p><ul class="lvl-2"><li class="lvl-6">通过JavaScript对象标记法写的<strong>文本</strong></li><li class="lvl-6">多作为<strong>数据载体</strong>，进行数据传输</li><li class="lvl-6">自定义对象<ul class="lvl-4"><li class="lvl-10"><img data-src="https://cdn.jsdelivr.net/gh/MengChangWang/Blog_Image@main/img/fef698ce3a1442548684b60d271ab794.jpg" alt=""></li></ul></li><li class="lvl-6">格式与自定义对象类似，但变量名要加双引号</li><li class="lvl-6">定义<ul class="lvl-4"><li class="lvl-10"><code>var 变量名 = '&#123;&quot;key1&quot;: value1,&quot;key2&quot;:value2&#125;'</code></li><li class="lvl-10"><code>var userStr = '&#123;&quot;name&quot;:&quot;Jerry&quot;,&quot;age&quot;:18,&quot;addr&quot;:[&quot;原神&quot;,&quot;星铁&quot;,&quot;绝区零&quot;]&#125;'</code></li><li class="lvl-10">该对象是文本，整体要加单引号</li></ul></li><li class="lvl-6">方法<ul class="lvl-4"><li class="lvl-10">JSON.parse()    将 JSON 字符串解析为 JavaScript 对象</li><li class="lvl-10">JSON.stringify()</li></ul></li></ul></li><li class="lvl-2"><p><mark>BOM(Browser Object Model)</mark></p><ul class="lvl-2"><li class="lvl-6">浏览器对象模型，允许js与浏览器对话，js将<strong>浏览器各个组成部分</strong>封装为对象</li><li class="lvl-6">组成<ul class="lvl-4"><li class="lvl-10">Window:浏览器窗口对象<ul class="lvl-6"><li class="lvl-14">方法<ul class="lvl-8"><li class="lvl-18">alert()显示带有一段消息和一个确认按钮的警告框</li><li class="lvl-18">confirm()显示带有一段消息以及一个确认和取消按钮的对话框</li><li class="lvl-18">setInterval()按照指定的周期来调用函数</li><li class="lvl-18">setTimeout()在指定的毫秒数后调用函数</li></ul></li></ul></li><li class="lvl-10">Navigator:浏览器对象</li><li class="lvl-10">Screen</li><li class="lvl-10">History</li><li class="lvl-10">Location:地址栏对象<ul class="lvl-6"><li class="lvl-14">属性：href</li><li class="lvl-14"><code>location.href = &quot;</code><a href="https://www.xxxx.cn%22%60">https://www.xxxx.cn&quot;`</a></li></ul></li></ul></li></ul></li><li class="lvl-2"><p><mark>DOM(Document Object Model)</mark></p><ul class="lvl-2"><li class="lvl-6">将<strong>标记语言</strong>的各个组成部分封装为对应的对象<ul class="lvl-4"><li class="lvl-10">Document:整个文档对象</li><li class="lvl-10">Element:元素对象</li><li class="lvl-10">Attribute:属性对象</li><li class="lvl-10">Text:文本对象</li><li class="lvl-10">Comment:注释对象</li></ul></li></ul></li></ul><h4 id="js事件监听">js事件监听</h4><ul class="lvl-0"><li class="lvl-2"><p>指发生在HTML元素上的事情，如按钮被点击，按下鼠标快捷键,执行相应代码</p></li><li class="lvl-2"><p>事件绑定</p><ul class="lvl-2"><li class="lvl-6"><img data-src="https://cdn.jsdelivr.net/gh/MengChangWang/Blog_Image@main/img/13eb553b0c2641fa98fba14050304d0f.jpg" alt=""></li></ul></li><li class="lvl-2"><p>常见事件</p><ul class="lvl-2"><li class="lvl-6"><img data-src="https://cdn.jsdelivr.net/gh/MengChangWang/Blog_Image@main/img/0d7b9d055cc4489fa75047028cb7b01f.jpg" alt=""></li></ul></li></ul><h3 id="Vue">Vue</h3><ul class="lvl-0"><li class="lvl-2"><p>前端框架，免除js中的DOM操作，基于MVVM思想，实现数据双向绑定</p></li></ul><h4 id="插值表达式-swig￼11">插值表达式:</h4><h4 id="常用属性">常用属性</h4><ul class="lvl-0"><li class="lvl-2"><p>el指示vue编译器从什么地方开始解析 vue的语法</p></li><li class="lvl-2"><p>data存储变量</p></li><li class="lvl-2"><p>methods存放函数</p></li><li class="lvl-2"><p>template设置模板</p></li><li class="lvl-2"><p>watch</p></li><li class="lvl-2"><p>computed</p></li><li class="lvl-2"><p>render创建真正的Virtual Dom</p></li></ul><h4 id="常用指令">常用指令</h4><ul class="lvl-0"><li class="lvl-2"><p>v-model在<a href="####%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE">表单元素</a>上创建双向数据绑定</p></li><li class="lvl-2"><p>v-bind为HTML标签绑定属性值，如href，css样式</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;yuanshen&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>原神<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;url&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">message</span>:<span class="string">&quot;hello vue&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#yuanshen&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">url</span>:<span class="string">&quot;https://www.yuanshen.com/#/&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>v-on为HTML标签绑定事件</p><ul class="lvl-2"><li class="lvl-6"><img data-src="https://cdn.jsdelivr.net/gh/MengChangWang/Blog_Image@main/img/1728dacdc3684d4da2335099fb847944.jpg" alt=""></li></ul></li><li class="lvl-2"><p>v-if, v-else-if, v-else条件性的渲染某元素</p></li><li class="lvl-2"><p>v-show根据条件展示某元素，区别在于切换的是display属性的值</p></li><li class="lvl-2"><p>v-for列表渲染，遍历容器中的元素或者对象的属性</p><ul class="lvl-2"><li class="lvl-6"><code>&lt;div v-for=&quot;变量名 in 遍历对象&quot;&gt;&#123;&#123;变量名&#125;&#125;&lt;/div&gt;</code></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;addr in addrs&quot;</span>&#123;&#123;<span class="attr">addr</span>&#125;&#125;&lt;/<span class="attr">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(addr,index) in addrs&quot;</span>&#123;&#123;<span class="attr">index</span>+<span class="attr">1</span>&#125;&#125;<span class="attr">:</span>&#123;&#123;<span class="attr">addr</span>&#125;&#125;&lt;/<span class="attr">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">data:&#123;</span><br><span class="line">...</span><br><span class="line">addrs:[&#x27;beijing&#x27;,&#x27;shanghai&#x27;,&#x27;hongkong&#x27;,&#x27;nanjing&#x27;]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>案例</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1px&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60%&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>成绩<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>等级<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;(arr,index) in users&quot;</span>&gt;</span> //遍历users数组中的元素，并赋值给arr</span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;index+1&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;arr.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;arr.age&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;arr.gender==1&quot;</span>&gt;</span>boy<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else-if</span>=<span class="string">&quot;arr.gender==0&quot;</span>&gt;</span>girl<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;arr.score&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;arr.score&gt;=90&quot;</span>&gt;</span>优秀<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else-if</span>=<span class="string">&quot;arr.score&gt;=60&quot;</span>&gt;</span>及格<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>=<span class="string">&quot;arr.score 60&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:red &quot;</span>&gt;</span>不及格<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">users</span>:[&#123;<span class="attr">name</span>:<span class="string">&quot;纳西妲&quot;</span>,<span class="attr">age</span>:<span class="string">&quot;500&quot;</span>,<span class="attr">gender</span>:<span class="number">0</span>,<span class="attr">score</span>:<span class="number">100</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;<span class="attr">name</span>:<span class="string">&quot;芙宁娜&quot;</span>,<span class="attr">age</span>:<span class="string">&quot;530&quot;</span>,<span class="attr">gender</span>:<span class="number">0</span>,<span class="attr">score</span>:<span class="number">80</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;<span class="attr">name</span>:<span class="string">&quot;荒泷一斗&quot;</span>,<span class="attr">age</span>:<span class="string">&quot;101&quot;</span>,<span class="attr">gender</span>:<span class="number">1</span>,<span class="attr">score</span>:<span class="number">55</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;<span class="attr">name</span>:<span class="string">&quot;旅行者&quot;</span>,<span class="attr">age</span>:<span class="string">&quot;666&quot;</span>,<span class="attr">gender</span>:<span class="number">1</span>,<span class="attr">score</span>:<span class="number">90</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;<span class="attr">name</span>:<span class="string">&quot;派蒙&quot;</span>,<span class="attr">age</span>:<span class="string">&quot;320&quot;</span>,<span class="attr">gender</span>:<span class="number">0</span>,<span class="attr">score</span>:<span class="number">66</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;<span class="attr">name</span>:<span class="string">&quot;七七&quot;</span>,<span class="attr">age</span>:<span class="string">&quot;432&quot;</span>,<span class="attr">gender</span>:<span class="number">0</span>,<span class="attr">score</span>:<span class="number">77</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;<span class="attr">name</span>:<span class="string">&quot;天理&quot;</span>,<span class="attr">age</span>:<span class="string">&quot;999&quot;</span>,<span class="attr">gender</span>:<span class="number">0</span>,<span class="attr">score</span>:<span class="number">150</span>&#125;]</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="生命周期">生命周期</h4><ul class="lvl-0"><li class="lvl-2"><p>每触发一个生命周期事件，会自动执行一个生命周期方法（钩子）</p></li><li class="lvl-2"><p>八个阶段</p><ul class="lvl-2"><li class="lvl-6">beforeCreate</li><li class="lvl-6">created</li><li class="lvl-6">beforeMount</li><li class="lvl-6">mounted挂载完成</li><li class="lvl-6">beforeUpdate</li><li class="lvl-6">updated</li><li class="lvl-6">beforeDestroy</li><li class="lvl-6">destroyed</li></ul></li></ul><h4 id="Vue路由-Vue-Router">Vue路由(Vue Router)</h4><ul class="lvl-0"><li class="lvl-2"><p>Vue router 路由器类，根据路由请求在路由视图中动态渲染选中的组件</p></li><li class="lvl-2"><p><code>&lt;router-link&gt;</code>请求链接组件，会被浏览器解析为<code>&lt;a&gt;</code></p></li><li class="lvl-2"><p><code>&lt;router-view&gt;</code>动态视图组件，用来渲染展示与路由路径对应的组件</p></li></ul><h3 id="Ajax-Asynchronous-Javascript-Anderson-XML">Ajax(Asynchronous Javascript Anderson XML)</h3><ul class="lvl-0"><li class="lvl-2"><p><strong>异步</strong>的Javascript和XML</p></li></ul><h4 id="作用">作用</h4><ul class="lvl-0"><li class="lvl-2"><p>数据交换：通过它可以向服务器发送请求，并获取服务器响应的数据</p></li><li class="lvl-2"><p>异步交互：不刷新整个页面的同时，进行局部刷新</p></li></ul><h4 id="Axios">Axios</h4><ul class="lvl-0"><li class="lvl-2"><p>对原生的Ajax进行了封装，简化书写，快速开发</p></li><li class="lvl-2"><p>入门程序</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;获取数据GET&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;get()&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;删除数据POST&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;post()&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">get</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">method</span>:<span class="string">&quot;get&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">url</span>:<span class="string">&quot;http://yuanshen.com&quot;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">-------------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="language-javascript">            axios.<span class="title function_">get</span>(<span class="string">&quot;http://yuanshen.com&quot;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(result.<span class="property">data</span>)&#125;) <span class="comment">//简化模式</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.jsdelivr.net/gh/MengChangWang/Blog_Image@main/img/5da623d6d2e9467ca984a9b4ca3dec8d.jpg" alt=""></p><ul class="lvl-0"><li class="lvl-2"><p>结合Vue中的mounted生命周期事件</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">emps</span>:[]</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">mounted</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            axios.<span class="title function_">get</span>(<span class="string">&quot;http://www.xxxx.xxx.com&quot;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">emps</span> = result.<span class="property">data</span>.<span class="property">data</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;);   </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="YApi">YApi</h3><ul class="lvl-0"><li class="lvl-2"><p>高效，易用，功能强大的api管理平台</p></li><li class="lvl-2"><p>用于模拟前端所需要的数据</p></li></ul><h3 id="前端工程化">前端工程化</h3><h4 id="定义">定义</h4><ul class="lvl-0"><li class="lvl-2"><p>指把前端开发所需的工具，技术，流程，经验等进行规范化，标准化</p></li></ul><h4 id="vue脚手架的环境准备">vue脚手架的环境准备</h4><ul class="lvl-0"><li class="lvl-2"><p>安装node.js</p></li><li class="lvl-2"><p>配置npm的全局安装路径   <code>npm config set prefix &quot;node.js的安装路径&quot;</code></p></li><li class="lvl-2"><p>切换npm的镜像  <code>npm config set registry 镜像地址</code></p><ul class="lvl-2"><li class="lvl-5">腾讯 镜像: <a href="https://mirrors.cloud.tencent.com/npm/">https://mirrors.cloud.tencent.com/npm/</a></li><li class="lvl-4">华为 镜像: <a href="https://mirrors.huaweicloud.com/repository/npm/">https://mirrors.huaweicloud.com/repository/npm/</a></li><li class="lvl-4">阿里 镜像：<a href="https://npm.aliyun.com">https://npm.aliyun.com</a></li></ul></li><li class="lvl-2"><p>安装vue-cli <code>npm install -g @vue/cli</code></p></li><li class="lvl-2"><p>确认是否安装成功 <code>vue --version</code></p></li></ul><h4 id="Vue项目">Vue项目</h4><h5 id="创建">创建</h5><ul class="lvl-0"><li class="lvl-2"><p>命令行 <code>vue create vue-project01</code></p></li><li class="lvl-2"><p>图形化界面<code>vue ui</code></p></li></ul><h5 id="目录结构">目录结构</h5><ul class="lvl-0"><li class="lvl-2"><p>node_modules 整个项目的依赖包</p></li><li class="lvl-2"><p>public 存放项目的静态文件</p></li><li class="lvl-2"><p><mark>src</mark>       存放项目的源代码</p><ul class="lvl-2"><li class="lvl-4"><mark>assets</mark>静态资源</li><li class="lvl-4"><mark>components</mark>可重用的组件</li><li class="lvl-4"><mark>router</mark>路由配置</li><li class="lvl-4"><mark>views</mark>视图组件（页面）</li><li class="lvl-4"><mark>App.vue</mark>入口页面（根组件）</li><li class="lvl-4"><mark>main.js</mark>入口js文件</li></ul></li><li class="lvl-2"><p>package.json   模板基本信息，项目开发所需要的模块，版本信息</p></li><li class="lvl-2"><p>vue.config.js     保存vue配置的文件，如：代理，端口的配置</p></li></ul><h5 id="更改端口号">更改端口号</h5><ul class="lvl-0"><li class="lvl-2"><p>进入vue.config.js文件</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; defineConfig &#125; = <span class="built_in">require</span>(<span class="string">&#x27;@vue/cli-service&#x27;</span>)</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">transpileDependencies</span>: <span class="literal">true</span>,</span><br><span class="line"> <span class="comment">//添加以下内容，将端口号改为7000</span></span><br><span class="line">  <span class="attr">devServer</span>:&#123;</span><br><span class="line">    <span class="attr">port</span>:<span class="number">7000</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>Vue的组件文件以.vue结尾，每个组件由三部分组成<code>&lt;template&gt;，&lt;script&gt;，&lt;style&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span>  //模板部分，生成HTML代码</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">data</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">message</span>:<span class="string">&quot;hello vue&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  //控制模板的数据来源和行为</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span>  //css样式部分</span><br></pre></td></tr></table></figure><h3 id="Element-Vue组件库">Element(Vue组件库)</h3><p><strong>组件</strong>：组成网页的部件，如超链接，按钮，图片，表格，表单，分页条等</p><p>url：<a href="https://element-plus.org/zh-CN/#/zh-CN">一个 Vue 3 UI 框架 | Element Plus (element-plus.org)</a></p><h4 id="如何使用">如何使用</h4><ul class="lvl-0"><li class="lvl-2"><p>在创建好的Vue项目中安装ElementUI组件库 <code> npm install element-plus --save</code></p></li><li class="lvl-2"><p>引入ElementUI组件库</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementPlus</span> <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-plus/dist/index.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>)</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>访问官网，复制组件代码，调整</p></li></ul><h4 id="打包部署">打包部署</h4><ul class="lvl-0"><li class="lvl-2"><p>先打包<code>npm run build</code> 再部署</p></li><li class="lvl-2"><p>将打包好的dist目录下的文件，复制到<mark>nginx</mark>安装目录下的<mark>html目录</mark></p></li><li class="lvl-2"><p><strong>启动</strong>：双击nginx.exe文件，nginx服务器默认占用<u>本机80端口号</u></p><ul class="lvl-2"><li class="lvl-4">如果80端口号被占用，可以在<strong>nginx.conf</strong>中修改端口号</li><li class="lvl-4">查看端口被谁占用<code>netstat -ano | findStr 80</code></li></ul></li><li class="lvl-2"><p>访问：浏览器输入 <code>localhost:端口号</code></p></li></ul><h4 id="Nginx">Nginx</h4><p>一款轻量级的web服务器，反向代理服务器，电子邮件代理服务器</p>]]></content:encoded>
      
      
      <category domain="https://MengChangWang.github.io/categories/Java/">Java</category>
      
      
      
      <comments>https://mengchangwang.github.io/2024/04/05/JavaWeb%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://mengchangwang.github.io/2024/03/27/hello-world/</link>
      <guid>https://mengchangwang.github.io/2024/03/27/hello-world/</guid>
      <pubDate>Wed, 27 Mar 2024 07:20:58 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Welcome to my personal blog, this is the first attemp.&lt;/p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Welcome to my personal blog, this is the first attemp.</p>]]></content:encoded>
      
      
      
      
      <comments>https://mengchangwang.github.io/2024/03/27/hello-world/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
